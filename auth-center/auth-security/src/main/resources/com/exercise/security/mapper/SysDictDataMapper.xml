<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exercise.security.mapper.SysDictDataMapper">
  <resultMap id="BaseResultMap" type="com.exercise.security.model.SysDictData">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dict_code" jdbcType="VARCHAR" property="dictCode" />
    <result column="dict_sort" jdbcType="INTEGER" property="dictSort" />
    <result column="dict_name" jdbcType="VARCHAR" property="dictName" />
    <result column="dict_label" jdbcType="VARCHAR" property="dictLabel" />
    <result column="dict_value" jdbcType="VARCHAR" property="dictValue" />
    <result column="dict_type" jdbcType="VARCHAR" property="dictType" />
    <result column="css_class" jdbcType="VARCHAR" property="cssClass" />
    <result column="list_class" jdbcType="VARCHAR" property="listClass" />
    <result column="is_default" jdbcType="CHAR" property="isDefault" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="modify_by" jdbcType="VARCHAR" property="modifyBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, dict_code, dict_sort, dict_name, dict_label, dict_value, dict_type, css_class, 
    list_class, is_default, status, remark, create_by, modify_by, create_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="com.exercise.security.model.SysDictDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_dict_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_dict_data
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_dict_data
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.exercise.security.model.SysDictDataExample">
    delete from sys_dict_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exercise.security.model.SysDictData">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_dict_data (dict_code, dict_sort, dict_name, 
      dict_label, dict_value, dict_type, 
      css_class, list_class, is_default, 
      status, remark, create_by, 
      modify_by, create_time, modify_time
      )
    values (#{dictCode,jdbcType=VARCHAR}, #{dictSort,jdbcType=INTEGER}, #{dictName,jdbcType=VARCHAR}, 
      #{dictLabel,jdbcType=VARCHAR}, #{dictValue,jdbcType=VARCHAR}, #{dictType,jdbcType=VARCHAR}, 
      #{cssClass,jdbcType=VARCHAR}, #{listClass,jdbcType=VARCHAR}, #{isDefault,jdbcType=CHAR}, 
      #{status,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{modifyBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.exercise.security.model.SysDictData">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_dict_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dictCode != null">
        dict_code,
      </if>
      <if test="dictSort != null">
        dict_sort,
      </if>
      <if test="dictName != null">
        dict_name,
      </if>
      <if test="dictLabel != null">
        dict_label,
      </if>
      <if test="dictValue != null">
        dict_value,
      </if>
      <if test="dictType != null">
        dict_type,
      </if>
      <if test="cssClass != null">
        css_class,
      </if>
      <if test="listClass != null">
        list_class,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="modifyBy != null">
        modify_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dictCode != null">
        #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictSort != null">
        #{dictSort,jdbcType=INTEGER},
      </if>
      <if test="dictName != null">
        #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="dictLabel != null">
        #{dictLabel,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null">
        #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictType != null">
        #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="cssClass != null">
        #{cssClass,jdbcType=VARCHAR},
      </if>
      <if test="listClass != null">
        #{listClass,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyBy != null">
        #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exercise.security.model.SysDictDataExample" resultType="java.lang.Long">
    select count(*) from sys_dict_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_dict_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.dictCode != null">
        dict_code = #{record.dictCode,jdbcType=VARCHAR},
      </if>
      <if test="record.dictSort != null">
        dict_sort = #{record.dictSort,jdbcType=INTEGER},
      </if>
      <if test="record.dictName != null">
        dict_name = #{record.dictName,jdbcType=VARCHAR},
      </if>
      <if test="record.dictLabel != null">
        dict_label = #{record.dictLabel,jdbcType=VARCHAR},
      </if>
      <if test="record.dictValue != null">
        dict_value = #{record.dictValue,jdbcType=VARCHAR},
      </if>
      <if test="record.dictType != null">
        dict_type = #{record.dictType,jdbcType=VARCHAR},
      </if>
      <if test="record.cssClass != null">
        css_class = #{record.cssClass,jdbcType=VARCHAR},
      </if>
      <if test="record.listClass != null">
        list_class = #{record.listClass,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null">
        is_default = #{record.isDefault,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyBy != null">
        modify_by = #{record.modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_dict_data
    set id = #{record.id,jdbcType=BIGINT},
      dict_code = #{record.dictCode,jdbcType=VARCHAR},
      dict_sort = #{record.dictSort,jdbcType=INTEGER},
      dict_name = #{record.dictName,jdbcType=VARCHAR},
      dict_label = #{record.dictLabel,jdbcType=VARCHAR},
      dict_value = #{record.dictValue,jdbcType=VARCHAR},
      dict_type = #{record.dictType,jdbcType=VARCHAR},
      css_class = #{record.cssClass,jdbcType=VARCHAR},
      list_class = #{record.listClass,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=CHAR},
      status = #{record.status,jdbcType=CHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      modify_by = #{record.modifyBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exercise.security.model.SysDictData">
    update sys_dict_data
    <set>
      <if test="dictCode != null">
        dict_code = #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictSort != null">
        dict_sort = #{dictSort,jdbcType=INTEGER},
      </if>
      <if test="dictName != null">
        dict_name = #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="dictLabel != null">
        dict_label = #{dictLabel,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null">
        dict_value = #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictType != null">
        dict_type = #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="cssClass != null">
        css_class = #{cssClass,jdbcType=VARCHAR},
      </if>
      <if test="listClass != null">
        list_class = #{listClass,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="modifyBy != null">
        modify_by = #{modifyBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exercise.security.model.SysDictData">
    update sys_dict_data
    set dict_code = #{dictCode,jdbcType=VARCHAR},
      dict_sort = #{dictSort,jdbcType=INTEGER},
      dict_name = #{dictName,jdbcType=VARCHAR},
      dict_label = #{dictLabel,jdbcType=VARCHAR},
      dict_value = #{dictValue,jdbcType=VARCHAR},
      dict_type = #{dictType,jdbcType=VARCHAR},
      css_class = #{cssClass,jdbcType=VARCHAR},
      list_class = #{listClass,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      modify_by = #{modifyBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>