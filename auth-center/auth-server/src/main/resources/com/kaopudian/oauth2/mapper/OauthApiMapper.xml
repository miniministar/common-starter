<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exercise.oauth2.mapper.OauthApiMapper">
  <resultMap id="BaseResultMap" type="com.exercise.oauth2.model.OauthApi">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="client_code" jdbcType="BIGINT" property="clientCode" />
    <result column="data_name" jdbcType="VARCHAR" property="dataName" />
    <result column="api_name" jdbcType="VARCHAR" property="apiName" />
    <result column="api_type" jdbcType="VARCHAR" property="apiType" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="request_parameters" jdbcType="VARCHAR" property="requestParameters" />
    <result column="response_code" jdbcType="VARCHAR" property="responseCode" />
    <result column="response_parameters" jdbcType="VARCHAR" property="responseParameters" />
    <result column="response_example" jdbcType="VARCHAR" property="responseExample" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, client_code, data_name, api_name, api_type, url, method, desc, request_parameters, 
    response_code, response_parameters, response_example, status, create_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="com.exercise.oauth2.model.OauthApiExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oauth_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oauth_api
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from oauth_api
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.exercise.oauth2.model.OauthApiExample">
    delete from oauth_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exercise.oauth2.model.OauthApi">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oauth_api (client_code, data_name, api_name, 
      api_type, url, method, 
      desc, request_parameters, response_code, 
      response_parameters, response_example, status, 
      create_time, modify_time)
    values (#{clientCode,jdbcType=BIGINT}, #{dataName,jdbcType=VARCHAR}, #{apiName,jdbcType=VARCHAR}, 
      #{apiType,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{desc,jdbcType=VARCHAR}, #{requestParameters,jdbcType=VARCHAR}, #{responseCode,jdbcType=VARCHAR}, 
      #{responseParameters,jdbcType=VARCHAR}, #{responseExample,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.exercise.oauth2.model.OauthApi">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oauth_api
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clientCode != null">
        client_code,
      </if>
      <if test="dataName != null">
        data_name,
      </if>
      <if test="apiName != null">
        api_name,
      </if>
      <if test="apiType != null">
        api_type,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="requestParameters != null">
        request_parameters,
      </if>
      <if test="responseCode != null">
        response_code,
      </if>
      <if test="responseParameters != null">
        response_parameters,
      </if>
      <if test="responseExample != null">
        response_example,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clientCode != null">
        #{clientCode,jdbcType=BIGINT},
      </if>
      <if test="dataName != null">
        #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="apiName != null">
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiType != null">
        #{apiType,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="requestParameters != null">
        #{requestParameters,jdbcType=VARCHAR},
      </if>
      <if test="responseCode != null">
        #{responseCode,jdbcType=VARCHAR},
      </if>
      <if test="responseParameters != null">
        #{responseParameters,jdbcType=VARCHAR},
      </if>
      <if test="responseExample != null">
        #{responseExample,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exercise.oauth2.model.OauthApiExample" resultType="java.lang.Long">
    select count(*) from oauth_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oauth_api
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.clientCode != null">
        client_code = #{record.clientCode,jdbcType=BIGINT},
      </if>
      <if test="record.dataName != null">
        data_name = #{record.dataName,jdbcType=VARCHAR},
      </if>
      <if test="record.apiName != null">
        api_name = #{record.apiName,jdbcType=VARCHAR},
      </if>
      <if test="record.apiType != null">
        api_type = #{record.apiType,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null">
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.requestParameters != null">
        request_parameters = #{record.requestParameters,jdbcType=VARCHAR},
      </if>
      <if test="record.responseCode != null">
        response_code = #{record.responseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.responseParameters != null">
        response_parameters = #{record.responseParameters,jdbcType=VARCHAR},
      </if>
      <if test="record.responseExample != null">
        response_example = #{record.responseExample,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oauth_api
    set id = #{record.id,jdbcType=BIGINT},
      client_code = #{record.clientCode,jdbcType=BIGINT},
      data_name = #{record.dataName,jdbcType=VARCHAR},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      api_type = #{record.apiType,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      desc = #{record.desc,jdbcType=VARCHAR},
      request_parameters = #{record.requestParameters,jdbcType=VARCHAR},
      response_code = #{record.responseCode,jdbcType=VARCHAR},
      response_parameters = #{record.responseParameters,jdbcType=VARCHAR},
      response_example = #{record.responseExample,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exercise.oauth2.model.OauthApi">
    update oauth_api
    <set>
      <if test="clientCode != null">
        client_code = #{clientCode,jdbcType=BIGINT},
      </if>
      <if test="dataName != null">
        data_name = #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="apiName != null">
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiType != null">
        api_type = #{apiType,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="requestParameters != null">
        request_parameters = #{requestParameters,jdbcType=VARCHAR},
      </if>
      <if test="responseCode != null">
        response_code = #{responseCode,jdbcType=VARCHAR},
      </if>
      <if test="responseParameters != null">
        response_parameters = #{responseParameters,jdbcType=VARCHAR},
      </if>
      <if test="responseExample != null">
        response_example = #{responseExample,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exercise.oauth2.model.OauthApi">
    update oauth_api
    set client_code = #{clientCode,jdbcType=BIGINT},
      data_name = #{dataName,jdbcType=VARCHAR},
      api_name = #{apiName,jdbcType=VARCHAR},
      api_type = #{apiType,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      request_parameters = #{requestParameters,jdbcType=VARCHAR},
      response_code = #{responseCode,jdbcType=VARCHAR},
      response_parameters = #{responseParameters,jdbcType=VARCHAR},
      response_example = #{responseExample,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>