<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exercise.doc.mapper.ApiMapper">
  <resultMap id="BaseResultMap" type="com.exercise.doc.model.Api">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="api_name" jdbcType="VARCHAR" property="apiName" />
    <result column="api_type_id" jdbcType="BIGINT" property="apiTypeId" />
    <result column="api_type_name" jdbcType="VARCHAR" property="apiTypeName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="protocol" jdbcType="VARCHAR" property="protocol" />
    <result column="request_hearders" jdbcType="VARCHAR" property="requestHearders" />
    <result column="response_code" jdbcType="VARCHAR" property="responseCode" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.exercise.doc.model.Api">
    <result column="request_parameters" jdbcType="LONGVARCHAR" property="requestParameters" />
    <result column="response_parameters" jdbcType="LONGVARCHAR" property="responseParameters" />
    <result column="response_example" jdbcType="LONGVARCHAR" property="responseExample" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, api_name, api_type_id, api_type_name, remark, url, method, protocol, request_hearders, 
    response_code, status, sort, create_time, modify_time
  </sql>
  <sql id="Blob_Column_List">
    request_parameters, response_parameters, response_example
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.exercise.doc.model.ApiExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from doc_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.exercise.doc.model.ApiExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from doc_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from doc_api
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from doc_api
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.exercise.doc.model.ApiExample">
    delete from doc_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exercise.doc.model.Api">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into doc_api (api_name, api_type_id, api_type_name, 
      remark, url, method, 
      protocol, request_hearders, response_code, 
      status, sort, create_time, 
      modify_time, request_parameters, response_parameters, 
      response_example)
    values (#{apiName,jdbcType=VARCHAR}, #{apiTypeId,jdbcType=BIGINT}, #{apiTypeName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{protocol,jdbcType=VARCHAR}, #{requestHearders,jdbcType=VARCHAR}, #{responseCode,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{requestParameters,jdbcType=LONGVARCHAR}, #{responseParameters,jdbcType=LONGVARCHAR}, 
      #{responseExample,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.exercise.doc.model.Api">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into doc_api
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="apiName != null">
        api_name,
      </if>
      <if test="apiTypeId != null">
        api_type_id,
      </if>
      <if test="apiTypeName != null">
        api_type_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="protocol != null">
        protocol,
      </if>
      <if test="requestHearders != null">
        request_hearders,
      </if>
      <if test="responseCode != null">
        response_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="requestParameters != null">
        request_parameters,
      </if>
      <if test="responseParameters != null">
        response_parameters,
      </if>
      <if test="responseExample != null">
        response_example,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="apiName != null">
        #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiTypeId != null">
        #{apiTypeId,jdbcType=BIGINT},
      </if>
      <if test="apiTypeName != null">
        #{apiTypeName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="protocol != null">
        #{protocol,jdbcType=VARCHAR},
      </if>
      <if test="requestHearders != null">
        #{requestHearders,jdbcType=VARCHAR},
      </if>
      <if test="responseCode != null">
        #{responseCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestParameters != null">
        #{requestParameters,jdbcType=LONGVARCHAR},
      </if>
      <if test="responseParameters != null">
        #{responseParameters,jdbcType=LONGVARCHAR},
      </if>
      <if test="responseExample != null">
        #{responseExample,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exercise.doc.model.ApiExample" resultType="java.lang.Long">
    select count(*) from doc_api
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update doc_api
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.apiName != null">
        api_name = #{record.apiName,jdbcType=VARCHAR},
      </if>
      <if test="record.apiTypeId != null">
        api_type_id = #{record.apiTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.apiTypeName != null">
        api_type_name = #{record.apiTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.protocol != null">
        protocol = #{record.protocol,jdbcType=VARCHAR},
      </if>
      <if test="record.requestHearders != null">
        request_hearders = #{record.requestHearders,jdbcType=VARCHAR},
      </if>
      <if test="record.responseCode != null">
        response_code = #{record.responseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requestParameters != null">
        request_parameters = #{record.requestParameters,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.responseParameters != null">
        response_parameters = #{record.responseParameters,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.responseExample != null">
        response_example = #{record.responseExample,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update doc_api
    set id = #{record.id,jdbcType=BIGINT},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      api_type_id = #{record.apiTypeId,jdbcType=BIGINT},
      api_type_name = #{record.apiTypeName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      protocol = #{record.protocol,jdbcType=VARCHAR},
      request_hearders = #{record.requestHearders,jdbcType=VARCHAR},
      response_code = #{record.responseCode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      request_parameters = #{record.requestParameters,jdbcType=LONGVARCHAR},
      response_parameters = #{record.responseParameters,jdbcType=LONGVARCHAR},
      response_example = #{record.responseExample,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update doc_api
    set id = #{record.id,jdbcType=BIGINT},
      api_name = #{record.apiName,jdbcType=VARCHAR},
      api_type_id = #{record.apiTypeId,jdbcType=BIGINT},
      api_type_name = #{record.apiTypeName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      protocol = #{record.protocol,jdbcType=VARCHAR},
      request_hearders = #{record.requestHearders,jdbcType=VARCHAR},
      response_code = #{record.responseCode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exercise.doc.model.Api">
    update doc_api
    <set>
      <if test="apiName != null">
        api_name = #{apiName,jdbcType=VARCHAR},
      </if>
      <if test="apiTypeId != null">
        api_type_id = #{apiTypeId,jdbcType=BIGINT},
      </if>
      <if test="apiTypeName != null">
        api_type_name = #{apiTypeName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="protocol != null">
        protocol = #{protocol,jdbcType=VARCHAR},
      </if>
      <if test="requestHearders != null">
        request_hearders = #{requestHearders,jdbcType=VARCHAR},
      </if>
      <if test="responseCode != null">
        response_code = #{responseCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestParameters != null">
        request_parameters = #{requestParameters,jdbcType=LONGVARCHAR},
      </if>
      <if test="responseParameters != null">
        response_parameters = #{responseParameters,jdbcType=LONGVARCHAR},
      </if>
      <if test="responseExample != null">
        response_example = #{responseExample,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.exercise.doc.model.Api">
    update doc_api
    set api_name = #{apiName,jdbcType=VARCHAR},
      api_type_id = #{apiTypeId,jdbcType=BIGINT},
      api_type_name = #{apiTypeName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      protocol = #{protocol,jdbcType=VARCHAR},
      request_hearders = #{requestHearders,jdbcType=VARCHAR},
      response_code = #{responseCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      request_parameters = #{requestParameters,jdbcType=LONGVARCHAR},
      response_parameters = #{responseParameters,jdbcType=LONGVARCHAR},
      response_example = #{responseExample,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exercise.doc.model.Api">
    update doc_api
    set api_name = #{apiName,jdbcType=VARCHAR},
      api_type_id = #{apiTypeId,jdbcType=BIGINT},
      api_type_name = #{apiTypeName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      protocol = #{protocol,jdbcType=VARCHAR},
      request_hearders = #{requestHearders,jdbcType=VARCHAR},
      response_code = #{responseCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>